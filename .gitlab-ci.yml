include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/Container-Scanning.gitlab-ci.yml
  - project: widas/software-quality/gitlab-template-projects/widas-kubernetes-ci-templates
    file: templates/.kube-deploy.yml
  - project: widas/software-quality/gitlab-template-projects/widas-ci-templates
    file: common/docker.yml

variables:
  DOCKER_DRIVER: overlay2
  TEMPLATE_REPO: https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.widas.de/widas/software-quality/gitlab-template-projects/widas-ci-templates
  SCRIPTS_PATH: widas-ci-templates/ci-scripts
  QUALITY_BASE_REPO: https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.widas.de/widas/codequality.git


stages:
  - test
  - package
  - release
  - publish
  - cleanup

# build_image:
#   image: $DOCKER_IMAGE_DEFAULT
#   stage: package
#   before_script:
#     - mkdir -p ~/.docker
#     - echo $CIM_DOCKER_CRED > ~/.docker/config.json
#     - apk add git
#     - git clone ${TEMPLATE_REPO}
#     - chmod 700 ./${SCRIPTS_PATH}/dev_docker_build.sh
#   script:
#     - ${SCRIPTS_PATH}/dev_docker_build.sh
#   only:
#     - development
#     - master

code_quality_json:
  stage: test
  allow_failure: true
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    CODE_QUALITY_IMAGE: "registry.gitlab.com/gitlab-org/ci-cd/codequality:latest"
  script:
    - docker pull "$CODE_QUALITY_IMAGE"
    # Clone the .codeclimate.yml from the code quality base repo
    - git clone ${QUALITY_BASE_REPO}
    - cp .codeclimate.yml .
    - rm -rf codequality
    # Run the codeclimate image from gitlab
    - docker run
      --env SOURCE_CODE="$PWD"
      --env CODECLIMATE_CODE="$PWD/app"
      --volume /tmp/cc:/tmp/cc
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      "$CODE_QUALITY_IMAGE" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths: [gl-code-quality-report.json]
  dependencies: []

code_quality_html:
  stage: test
  allow_failure: true
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker pull codeclimate/codeclimate
    - git clone ${QUALITY_BASE_REPO}
    - cp .codeclimate.yml .
    - rm -rf codequality
    - docker info
    - docker run
       --env SOURCE_CODE="$PWD"
       --env CODECLIMATE_CODE="$PWD"
       --volume "$PWD":/code
       --volume /var/run/docker.sock:/var/run/docker.sock
       --volume /tmp/cc:/tmp/cc
       codeclimate/codeclimate:latest analyze -f html > codeclimate.html
  artifacts:
    paths: [codeclimate.html]
  dependencies: []


release:
  image: docker-registry.widas.de:5050/dockerregistry/common/semantic-release:v1.0.5
  stage: release
  script:
    - semantic-release
  only:
    - master


development_deploy:
  extends: .deploy_kube
  stage: publish
  variables:
    VALUE_FILE_SUFFIX: test
    TEMPLATE_REPO: https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.widas.de/widas/software-quality/gitlab-template-projects/widas-kubernetes-ci-templates.git
    CIDAAS_CI_TEMPLATE: "widas-kubernetes-ci-templates/deployment_ymls/cidaas-service-all-in-one.yml.j2"
    KUBECONFIG_FILE: $wimcon1_loadtest_01_custom
    DOCKER_IMAGE: $DOCKER_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA-$CI_PIPELINE_ID
  only:
    - development

